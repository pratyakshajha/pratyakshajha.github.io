[{"categories":["git"],"content":"Setup User name: git config --global user.name \"[firstname lastname]\" Email: git config --global user.email \"[valid-email]\" Color: git config --global color.ui auto ","date":"2022-01-12","objectID":"/git-cheat-sheet/:1:0","tags":["cheatsheets"],"title":"Git Cheat Sheet","uri":"/git-cheat-sheet/"},{"categories":["git"],"content":"Initialization and cloning Make your current folder a git repo: git init Clone a repo: git clone [url] ","date":"2022-01-12","objectID":"/git-cheat-sheet/:2:0","tags":["cheatsheets"],"title":"Git Cheat Sheet","uri":"/git-cheat-sheet/"},{"categories":["git"],"content":"Staging and commits Get status of staged, unstages and untracked files: git status Add files to staging: git add [file] Remove a file from staging: git reset [file] Remove a file from staging and remove all changes: git reset --hard [file] Differences in files that are modified but not staged: git diff Differences in files that are staged but not committed: git diff --staged Commit changes: git commit -m \"[message]\" Commit only specific portion of a file: git add -p [file] Note: Git will go into interactive mode and prompt options for actions on each hunk. Add current staged changes to the previous commit: git commit --amend Note: Avoid amending a commit after they’ve been pushed. Undo all changes of the latest commit: git revert HEAD Undo all changes of a specific commit: git revert [commit-sha] ","date":"2022-01-12","objectID":"/git-cheat-sheet/:3:0","tags":["cheatsheets"],"title":"Git Cheat Sheet","uri":"/git-cheat-sheet/"},{"categories":["git"],"content":"Branch and merge List all branches and highlight current branch: git branch Switch to another branch: git checkout [branch-name] Create a new branch and switch to it: git checkout -b [branch name] Delete a branch: git branch -d [branch-name] Merge another branch to current branch: git merge [branch-name] Rebase the current branch to the top of master: git rebase master ","date":"2022-01-12","objectID":"/git-cheat-sheet/:4:0","tags":["cheatsheets"],"title":"Git Cheat Sheet","uri":"/git-cheat-sheet/"},{"categories":["git"],"content":"Tags List all tags: git tag Create a tag for current commit: git tag [tag-name] Create a tag for specific commit: git tag [tag-name] [commit-sha] Delete a tag: git tag -d [tag-name] ","date":"2022-01-12","objectID":"/git-cheat-sheet/:5:0","tags":["cheatsheets"],"title":"Git Cheat Sheet","uri":"/git-cheat-sheet/"},{"categories":["git"],"content":"Inspect changes Commit history of current branch: git log Show commits that changed a file: git log --follow [file] Show commit history as a graph: git log --graph --oneline ","date":"2022-01-12","objectID":"/git-cheat-sheet/:6:0","tags":["cheatsheets"],"title":"Git Cheat Sheet","uri":"/git-cheat-sheet/"},{"categories":["git"],"content":"Interacting with remote repo Add a git URL as remote: git remote add origin [url] Get all changes from remote branch: git pull Send all local changes to remote branch: git push Merge a remote branch to current: git merge origin\\[branch-name] ","date":"2022-01-12","objectID":"/git-cheat-sheet/:7:0","tags":["cheatsheets"],"title":"Git Cheat Sheet","uri":"/git-cheat-sheet/"},{"categories":["git"],"content":"Temporary commits Save all changes: git stash Restore changes from stash: git stash pop Discard the top of stash: git stash drop ","date":"2022-01-12","objectID":"/git-cheat-sheet/:8:0","tags":["cheatsheets"],"title":"Git Cheat Sheet","uri":"/git-cheat-sheet/"},{"categories":["projects"],"content":"From May 1st, the government of India has opened several vaccination centers for people aged between 18 to 45. The vaccines are scarce and logging into Cowin app to check status is cumbersome due to frequent timeouts. The government has also made a public API to access vaccine related information like finding availability and downloading vaccination certificates. Using this, I have made a dashboard that makes it easy to find vaccine availability by district or pincode. Info It can only view vaccine availability. The actual booking needs to be done by the Cowin app ","date":"2021-05-15","objectID":"/covid-india-vaccine-appointment-availability/:0:0","tags":["javascript","web-development","python","angular"],"title":"Covid Vaccine Availability Dashboard","uri":"/covid-india-vaccine-appointment-availability/"},{"categories":["projects"],"content":"Dashboard Demo This dashboard is made with Angular web framework and Angular Material for components. View full page demo | View repo on github ","date":"2021-05-15","objectID":"/covid-india-vaccine-appointment-availability/:1:0","tags":["javascript","web-development","python","angular"],"title":"Covid Vaccine Availability Dashboard","uri":"/covid-india-vaccine-appointment-availability/"},{"categories":["projects"],"content":"Cowin APIs The APIs have the general pattern: BASE_URL + PATH + PARAMETERS where BASE_URL is cdn-api.co-vin.in/api/v2/appointment/sessions/public/ PATH QUERY PARAMETERS EXAMPLE findByDistrict district_id \u0026 date cdn-api.co-vin.in/api/v2/appointment/sessions/public/findByDistrict?district_id=365\u0026date=25-05-2021   findByPin pincode \u0026 date cdn-api.co-vin.in/api/v2/appointment/sessions/public/findByPin?pincode=440010\u0026date=25-05-2021   calendarByDistrict district_id \u0026 date cdn-api.co-vin.in/api/v2/appointment/sessions/public/calendarByDistrict?district_id=365\u0026date=25-05-2021   calendarByPin pincode \u0026 date cdn-api.co-vin.in/api/v2/appointment/sessions/public/calendarByPin?pincode=440010\u0026date=25-05-2021   For finding list of states and districts with their ids use BASE_URL as cdn-api.co-vin.in/api/v2/admin/location/ PATH PATH PARAMETERS EXAMPLE states None cdn-api.co-vin.in/api/v2/admin/location/states   districts state_id cdn-api.co-vin.in/api/v2/admin/location/districts/21   Tip If you get HTTP 403, then add a User-Agent header with value “Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/39.0.2171.95 Safari/537.36” These APIs can be accessed directly through a browser, REST clients like Postman, or any programming language. ","date":"2021-05-15","objectID":"/covid-india-vaccine-appointment-availability/:2:0","tags":["javascript","web-development","python","angular"],"title":"Covid Vaccine Availability Dashboard","uri":"/covid-india-vaccine-appointment-availability/"},{"categories":["projects"],"content":"Python Requests is one of the python libraries for making HTTP calls, with steps being as simple as: Import library: import requests Make the GET call response = requests.get(\"https://cdn-api.co-vin.in/api/v2/admin/location/states\") Check the status (200 = successful) print(response.status_code) Show the response print(response.json()) import requests import json # Appointment availibility by district and date (18+) url = \"https://cdn-api.co-vin.in/api/v2/appointment/sessions/public/findByDistrict\" params = {\"district_id\": \"365\", \"date\": \"25-05-2021\"} response = requests.get(url, params=params) print(\"HTTP \", response.status_code) data = response.json() for session in data[\"sessions\"]: if session[\"min_age_limit\"] == 18: print(json.dumps(session, indent=2)) # Appointment availibility by district for (18+) for next 7 days url = \"https://cdn-api.co-vin.in/api/v2/appointment/sessions/public/calendarByDistrict\" params = {\"district_id\": \"365\", \"date\": \"25-05-2021\"} response = requests.get(url, params=params) print(\"HTTP \", response.status_code) data = response.json() for center in data[\"centers\"]: for session in center[\"sessions\"]: if session[\"min_age_limit\"] == 18 and session[\"vaccine\"]==\"COVISHIELD\" and session[\"available_capacity\"] \u003e 0: print(json.dumps(session, indent=2)) ","date":"2021-05-15","objectID":"/covid-india-vaccine-appointment-availability/:2:1","tags":["javascript","web-development","python","angular"],"title":"Covid Vaccine Availability Dashboard","uri":"/covid-india-vaccine-appointment-availability/"},{"categories":["projects"],"content":"JavaScript XMLHttpRequest is a built-in object in JavaScript that can make HTTP calls in simple steps: Instantiate the object var request = new XMLHttpRequest() Prepare the GET call request.open('GET', 'https://cdn-api.co-vin.in/api/v2/appointment/sessions/public/findByDistrict?district_id=365\u0026date=25-05-2021') Define a function to do something when the response is received request.onload = function () { console.log(request.status); console.log(this.response); } Make the GET call request.send() // Appointment availibility by date and district var request = new XMLHttpRequest(); request.open('GET', 'https://cdn-api.co-vin.in/api/v2/appointment/sessions/public/findByDistrict?district_id=365\u0026date=25-05-2021'); request.onload = function () { console.log(request.status); console.log(this.response); } request.send() ","date":"2021-05-15","objectID":"/covid-india-vaccine-appointment-availability/:2:2","tags":["javascript","web-development","python","angular"],"title":"Covid Vaccine Availability Dashboard","uri":"/covid-india-vaccine-appointment-availability/"},{"categories":["projects"],"content":"References Cowin API documentation by GoI Making HTTP requests in Python Making HTTP requests in JS (or TS) Getting started with Angular Getting started with Angular Material ","date":"2021-05-15","objectID":"/covid-india-vaccine-appointment-availability/:3:0","tags":["javascript","web-development","python","angular"],"title":"Covid Vaccine Availability Dashboard","uri":"/covid-india-vaccine-appointment-availability/"},{"categories":[],"content":"Hi! I am Pratyaksha Jha. I am a software developer and a geek. I am passionate about learning and building. This is my blog. I write about challenging concepts, building usable software, code I often re-use. I also host some tiny utilities here. I would love to hear your feedback and suggestions. Feel free to reach out at hello@pratyakshajha.me! _  Pratyaksha means that which is before one’s eyes  Myer-Briggs INTJ-A  Currently Reading Dune  Obsessively Listening Tadow by Masego, FKJ Spotify Youtube ","date":"2020-07-26","objectID":"/about/:0:0","tags":[],"title":"About Me","uri":"/about/"}]