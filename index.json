[{"categories":["utilities","projects","calculator"],"content":"View full page demo ","date":"2023-12-09","objectID":"/potential-upside-calculator/:0:0","tags":["javascript"],"title":"Potential Upside Calculator","uri":"/potential-upside-calculator/"},{"categories":["notes"],"content":"SOLID is a set design principles in object-oriented context to make maintainable, testable and extendable software. ","date":"2023-05-06","objectID":"/solid-design-principles/:0:0","tags":["software engineering"],"title":"Solid Design Principles","uri":"/solid-design-principles/"},{"categories":["notes"],"content":"Single Responsibility A class should only have one responsibility. Furthermore, it should only have one reason to change. Benefits: Testing: A class with one responsibility will have far fewer test cases. Lower coupling: Less functionality in a single class will have fewer dependencies. Organization: Smaller, well-organized classes are easier to search than monolithic ones. ","date":"2023-05-06","objectID":"/solid-design-principles/:1:0","tags":["software engineering"],"title":"Solid Design Principles","uri":"/solid-design-principles/"},{"categories":["notes"],"content":"Example Bad A class representing a book: public class Book { private String name; private String author; private String text; //constructor, getters and setters void printTextToConsole() { // implementation } } Why bad? This code violates the single responsibility principle because it now has multiple responsibilities - to store book details and print text to the console. To fix this, create another class for printing text. Good public class BookPrinter { void printTextToConsole(String text){ // implementation } void printText(String text, PrintStream printStream){ // implementation } } ","date":"2023-05-06","objectID":"/solid-design-principles/:1:1","tags":["software engineering"],"title":"Solid Design Principles","uri":"/solid-design-principles/"},{"categories":["notes"],"content":"Open - Closed A class should be open for extension but closed for modification. When adding new functionality to classes, it should be open for extension but closed for modification. This prevents modifying existing code and causing potential new bugs in an otherwise working code. ","date":"2023-05-06","objectID":"/solid-design-principles/:2:0","tags":["software engineering"],"title":"Solid Design Principles","uri":"/solid-design-principles/"},{"categories":["notes"],"content":"Example Bad public class Example { public double Area(Object[] Shapes) { double area = 0; for (Object shape : Shapes) { if (shape.name == \"rectangle\") { Rectangle rectangle = (Rectangle) shape; area += rectangle.width*rectangle.height; } else { Circle circle = (Circle) shape; area += circle.radius*circle.radius*Math.PI; } return area; } } } Why bad? If a few more shapes have to be added, the code in the area method will have to be modified. To fix this and extend, not modify code, an area method can be added to each shape and used here. Good abstract class Shape { public abstract double getArea(); } class Rectangle extends Shape { private double width, height; @Override public double getArea() { return width*height; } } class Circle extends Shape { private double radius; @Override public double getArea() { return radius*radius*Math.PI; } } public class Example { public double Area(Object[] Shapes) { double area = 0; for (Object shape : Shapes) { area += shape.getArea(); } return area; } } } ","date":"2023-05-06","objectID":"/solid-design-principles/:2:1","tags":["software engineering"],"title":"Solid Design Principles","uri":"/solid-design-principles/"},{"categories":["notes"],"content":"Liskov Substitution Principle Child classes or subclasses must be substitutable for their parent classes or super classes. In other words, the child class must be able to replace the parent class. ","date":"2023-05-06","objectID":"/solid-design-principles/:3:0","tags":["software engineering"],"title":"Solid Design Principles","uri":"/solid-design-principles/"},{"categories":["notes"],"content":"Example Bad class Rectangle { public void setWidth(double width) { // implementation } public void setHeight(double height) { // implementation } public void getWidth() { // implementation } public void getHeight() { // implementation } } class Square extends Rectangle { public void setWidth(double width) { // set both h and w to w } public void setHeight(double height) { // set both h and w to h } public void getWidth() { // implementation } public void getHeight() { // implementation } } Why bad? Consider the following test code. If an object of a Square is supplied to the method below, the assertEquals will fail as the result will be 16, not 20. So, here the base class is not replaceable by its derived class. void test(Rectangle r) { r.setWidth(5); r.setHeight(4); assertEquals(5*4, r.getWidth()*r.getHeight()); } Good Don’t inherit the Rectangle class in the Square class. ","date":"2023-05-06","objectID":"/solid-design-principles/:3:1","tags":["software engineering"],"title":"Solid Design Principles","uri":"/solid-design-principles/"},{"categories":["notes"],"content":"Interface Segregation Principle Larger interfaces should be split into smaller ones. This ensures that implementing classes only needs to be concerned about the methods that are of interest to them. If there’s a fat interface, then any change in it would result in changes in all the implementing classes. ","date":"2023-05-06","objectID":"/solid-design-principles/:4:0","tags":["software engineering"],"title":"Solid Design Principles","uri":"/solid-design-principles/"},{"categories":["notes"],"content":"Example Bad abstract class Animal { abstract void feed(); abstract void groom(); } class Dog extends Animal { void feed() { // implementation } void groom() { // implementation } } class Tiger extends Animal { void feed() { // implementation } void groom() { // dummy implementation as a tiger can't be pet } } Why bad? A dummy implementation is provided to the Tiger class so that the compiler does not throw an error. A Tiger can’t be petted, so its implementation doesn’t actually do anything. Good abstract class Animal { abstract void feed(); } abstract class Pet extends Animal { abstract void groom(); } class Dog extends Pet { void feed() { // implementation } void groom() { // implementation } } class Tiger extends Animal { void feed() { // implementation } } ","date":"2023-05-06","objectID":"/solid-design-principles/:4:1","tags":["software engineering"],"title":"Solid Design Principles","uri":"/solid-design-principles/"},{"categories":["notes"],"content":"Dependency Inversion Depend upon abstractions (interfaces), not upon concrete classes or implementations. Because the abstraction does not depend on detail but the detail depends on abstraction, it decouples the code. Bad enum OutputDevice {PRINTER, DISK}; void copy(OutputDevice device) { int c = readKeyboard(); while (c != EOF) { if (device == PRINTER) writePrinter(c); else writeDisk(); c = readKeyboard(); } } Why bad? As the number of OutputDevice increases, the copy method will have to keep on changing. To fix this, create Reader and Writer interfaces. These will be dependencies of the copy method, copy method will not create these objects. rather this responsibility is inverted to the user. Good interface Reader { char read(); } interface Writer { void write(char c); } void copy(Reader r, Writer w) { char c = r.read(); while (c != EOF) { w.write(c); c = r.read(); } } ","date":"2023-05-06","objectID":"/solid-design-principles/:5:0","tags":["software engineering"],"title":"Solid Design Principles","uri":"/solid-design-principles/"},{"categories":["cheatsheets"],"content":" Info This post assumes prior knowledge of python and selenium 4 ","date":"2022-04-24","objectID":"/selenium-cheat-sheet/:0:0","tags":["python","automation","selenium","scripting"],"title":"Selenium Cheat Sheet","uri":"/selenium-cheat-sheet/"},{"categories":["cheatsheets"],"content":"Installation Selenium: pip install selenium Download the drivers, make sure that your browser, selenium and driver versions are compatible with each other. Chrome: https://chromedriver.chromium.org/downloads Firefox: https://github.com/mozilla/geckodriver/releases Edge: https://developer.microsoft.com/en-us/microsoft-edge/tools/webdriver/ ","date":"2022-04-24","objectID":"/selenium-cheat-sheet/:1:0","tags":["python","automation","selenium","scripting"],"title":"Selenium Cheat Sheet","uri":"/selenium-cheat-sheet/"},{"categories":["cheatsheets"],"content":"Instantiate your driver ","date":"2022-04-24","objectID":"/selenium-cheat-sheet/:2:0","tags":["python","automation","selenium","scripting"],"title":"Selenium Cheat Sheet","uri":"/selenium-cheat-sheet/"},{"categories":["cheatsheets"],"content":"Chrome from selenium import webdriver driver = webdriver.Chrome(executable_path=\"C:/webdrivers/chromedriver.exe\") With custom options from selenium import webdriver from selenium.webdriver.chrome.options import Options options = Options() ## option to not show an open browser window options.add_argument(\"--headless\") driver = webdriver.Chrome(executable_path=\"C:/webdrivers/chromedriver.exe\", options=options) ","date":"2022-04-24","objectID":"/selenium-cheat-sheet/:2:1","tags":["python","automation","selenium","scripting"],"title":"Selenium Cheat Sheet","uri":"/selenium-cheat-sheet/"},{"categories":["cheatsheets"],"content":"Mozilla from selenium import webdriver driver = webdriver.Firefox(executable_path=\"C:/webdrivers/geckodriver.exe\") With custom options from selenium import webdriver from selenium.webdriver.firefox.options import Options options = Options() # option for firefox.exe location, if firefox is not installed in default location options.binary_location = \"C:/.../firefox.exe\" options.set_preference(\"browser.download.manager.showWhenStarting\", False) options.set_preference(\"browser.download.dir\",\"/Data\") driver = webdriver.Firefox(executable_path=\"C:/webdrivers/geckodriver.exe\", options=options) ","date":"2022-04-24","objectID":"/selenium-cheat-sheet/:2:2","tags":["python","automation","selenium","scripting"],"title":"Selenium Cheat Sheet","uri":"/selenium-cheat-sheet/"},{"categories":["cheatsheets"],"content":"Edge from selenium import webdriver driver = webdriver.Edge(executable_path=\"C:/webdrivers/msedgedriver.exe\") With custom options from selenium import webdriver from selenium.webdriver.edge import service options = webdriver.EdgeOptions() options.use_chromium = True options.add_argument(\"start-maximized\") # option for msegde.exe location, if edge is not installed in default location options.binary_location = r\"C:/../msedge.exe\" service = service.Service(\"C:/webdrivers/msedgedriver.exe\") driver = webdriver.Edge(service=service, options=options) ","date":"2022-04-24","objectID":"/selenium-cheat-sheet/:2:3","tags":["python","automation","selenium","scripting"],"title":"Selenium Cheat Sheet","uri":"/selenium-cheat-sheet/"},{"categories":["cheatsheets"],"content":"Open a website driver.get(\"https://google.com\") ","date":"2022-04-24","objectID":"/selenium-cheat-sheet/:3:0","tags":["python","automation","selenium","scripting"],"title":"Selenium Cheat Sheet","uri":"/selenium-cheat-sheet/"},{"categories":["cheatsheets"],"content":"Find an element from selenium.webdriver.common.by import By element = find_element(By.ID, \"ID\") element = find_element(By.NAME, \"NAME\") element = find_element(By.XPATH, \"XPATH\") element = find_element(By.LINK_TEXT, \"TEXT\") element = find_element(By.PARTIAL_LINK_TEXT, \"PARTIAL_TEXT\") element = find_element(By.TAG_NAME, \"TAG_NAME\") element = find_element(By.CLASS_NAME, \"CLASS_NAME\") element = find_element(By.CSS_SELECTOR, \"CSS_SELECTOR\") ","date":"2022-04-24","objectID":"/selenium-cheat-sheet/:4:0","tags":["python","automation","selenium","scripting"],"title":"Selenium Cheat Sheet","uri":"/selenium-cheat-sheet/"},{"categories":["cheatsheets"],"content":"Find multiple elements from selenium.webdriver.common.by import By elements = find_elements(By.ID, \"ID\") elements = find_elements(By.NAME, \"NAME\") elements = find_element(By.XPATH, \"XPATH\") elements = find_element(By.LINK_TEXT, \"TEXT\") elements = find_element(By.PARTIAL_LINK_TEXT, \"PARTIAL_TEXT\") elements = find_element(By.TAG_NAME, \"TAG_NAME\") elements = find_element(By.CLASS_NAME, \"CLASS_NAME\") elements = find_element(By.CSS_SELECTOR, \"CSS_SELECTOR\") ","date":"2022-04-24","objectID":"/selenium-cheat-sheet/:5:0","tags":["python","automation","selenium","scripting"],"title":"Selenium Cheat Sheet","uri":"/selenium-cheat-sheet/"},{"categories":["cheatsheets"],"content":"Get information from element element.text # get an attribute like href, class, value etc element.get_attribute(\"ATTRIBUTE\") # get property like text_length element.get_property(\"PROPERTY\") # is element visible to user element.is_displayed() element.is_enabled() element.is_selected() element.screenshot(\"/Screenshots/foo.png\") ","date":"2022-04-24","objectID":"/selenium-cheat-sheet/:6:0","tags":["python","automation","selenium","scripting"],"title":"Selenium Cheat Sheet","uri":"/selenium-cheat-sheet/"},{"categories":["cheatsheets"],"content":"Interactions ","date":"2022-04-24","objectID":"/selenium-cheat-sheet/:7:0","tags":["python","automation","selenium","scripting"],"title":"Selenium Cheat Sheet","uri":"/selenium-cheat-sheet/"},{"categories":["cheatsheets"],"content":"Button element.cick() ","date":"2022-04-24","objectID":"/selenium-cheat-sheet/:7:1","tags":["python","automation","selenium","scripting"],"title":"Selenium Cheat Sheet","uri":"/selenium-cheat-sheet/"},{"categories":["cheatsheets"],"content":"Text element.send_keys(\"lorem ipsum\") # press arrow key element.send_keys(\"lorem ipsum\", Keys.ARROW_DOWN) element.clear() List of all keys is at: https://selenium-python.readthedocs.io/api.html#module-selenium.webdriver.common.keys ","date":"2022-04-24","objectID":"/selenium-cheat-sheet/:7:2","tags":["python","automation","selenium","scripting"],"title":"Selenium Cheat Sheet","uri":"/selenium-cheat-sheet/"},{"categories":["cheatsheets"],"content":"Options from selenium.webdriver.support.ui import Select select = Select(driver.find_element(By.XPATH, \"XPATH\")) select.select_by_index(index) select.select_by_visible_text(\"text\") select.select_by_value(value) options = select.options # get all options select.all_selected_options # get all selected options select.deselect_all() # deselect all selected options ","date":"2022-04-24","objectID":"/selenium-cheat-sheet/:7:3","tags":["python","automation","selenium","scripting"],"title":"Selenium Cheat Sheet","uri":"/selenium-cheat-sheet/"},{"categories":["cheatsheets"],"content":"Submit a form element.submit() ","date":"2022-04-24","objectID":"/selenium-cheat-sheet/:8:0","tags":["python","automation","selenium","scripting"],"title":"Selenium Cheat Sheet","uri":"/selenium-cheat-sheet/"},{"categories":["cheatsheets"],"content":"Waits ","date":"2022-04-24","objectID":"/selenium-cheat-sheet/:9:0","tags":["python","automation","selenium","scripting"],"title":"Selenium Cheat Sheet","uri":"/selenium-cheat-sheet/"},{"categories":["cheatsheets"],"content":"Explicit waits Wait for some time until certain condition is true. In the example, Selenium will wait for a maximum of 10s, checking the condition every 500ms. TimeoutException is thrown if element is not found after 10s. from selenium.webdriver.common.by import By from selenium.webdriver.support.wait import WebDriverWait from selenium.webdriver.support import expected_conditions as EC try: element = WebDriverWait(driver, 10).until( EC.presence_of_element_located((By.ID, \"ID\")) ) finally: driver.quit() All supported expected conditions are at: https://selenium-python.readthedocs.io/api.html#module-selenium.webdriver.support.expected_conditions ","date":"2022-04-24","objectID":"/selenium-cheat-sheet/:9:1","tags":["python","automation","selenium","scripting"],"title":"Selenium Cheat Sheet","uri":"/selenium-cheat-sheet/"},{"categories":["cheatsheets"],"content":"Implicit waits Wait for some time before finding any element. This applies for any find, unless webdriver is created anew. Use this carefully, because it can slow down the script execution. driver.implicitly_wait(10) ","date":"2022-04-24","objectID":"/selenium-cheat-sheet/:9:2","tags":["python","automation","selenium","scripting"],"title":"Selenium Cheat Sheet","uri":"/selenium-cheat-sheet/"},{"categories":["cheatsheets"],"content":"Close driver.close() Reference https://selenium-python.readthedocs.io/ ","date":"2022-04-24","objectID":"/selenium-cheat-sheet/:10:0","tags":["python","automation","selenium","scripting"],"title":"Selenium Cheat Sheet","uri":"/selenium-cheat-sheet/"},{"categories":["cheatsheets"],"content":"Setup User name: git config --global user.name \"[firstname lastname]\" Email: git config --global user.email \"[valid-email]\" Color: git config --global color.ui auto ","date":"2022-01-12","objectID":"/git-cheat-sheet/:1:0","tags":["git"],"title":"Git Cheat Sheet","uri":"/git-cheat-sheet/"},{"categories":["cheatsheets"],"content":"Initialization and cloning Make your current folder a git repo: git init Clone a repo: git clone [url] ","date":"2022-01-12","objectID":"/git-cheat-sheet/:2:0","tags":["git"],"title":"Git Cheat Sheet","uri":"/git-cheat-sheet/"},{"categories":["cheatsheets"],"content":"Staging and commits Get status of staged, unstages and untracked files: git status Add files to staging: git add [file] Remove a file from staging: git reset [file] Remove a file from staging and remove all changes: git reset --hard [file] Differences in files that are modified but not staged: git diff Differences in files that are staged but not committed: git diff --staged Commit changes: git commit -m \"[message]\" Commit only specific portion of a file: git add -p [file] Note: Git will go into interactive mode and prompt options for actions on each hunk. Add current staged changes to the previous commit: git commit --amend Note: Avoid amending a commit after they’ve been pushed. Undo all changes of the latest commit: git revert HEAD Undo all changes of a specific commit: git revert [commit-sha] ","date":"2022-01-12","objectID":"/git-cheat-sheet/:3:0","tags":["git"],"title":"Git Cheat Sheet","uri":"/git-cheat-sheet/"},{"categories":["cheatsheets"],"content":"Branch and merge List all branches and highlight current branch: git branch Switch to another branch: git checkout [branch-name] Create a new branch and switch to it: git checkout -b [branch name] Delete a branch: git branch -d [branch-name] Merge another branch to current branch: git merge [branch-name] Rebase the current branch to the top of master: git rebase master ","date":"2022-01-12","objectID":"/git-cheat-sheet/:4:0","tags":["git"],"title":"Git Cheat Sheet","uri":"/git-cheat-sheet/"},{"categories":["cheatsheets"],"content":"Tags List all tags: git tag Create a tag for current commit: git tag [tag-name] Create a tag for specific commit: git tag [tag-name] [commit-sha] Delete a tag: git tag -d [tag-name] ","date":"2022-01-12","objectID":"/git-cheat-sheet/:5:0","tags":["git"],"title":"Git Cheat Sheet","uri":"/git-cheat-sheet/"},{"categories":["cheatsheets"],"content":"Inspect changes Commit history of current branch: git log Show commits that changed a file: git log --follow [file] Show commit history as a graph: git log --graph --oneline ","date":"2022-01-12","objectID":"/git-cheat-sheet/:6:0","tags":["git"],"title":"Git Cheat Sheet","uri":"/git-cheat-sheet/"},{"categories":["cheatsheets"],"content":"Interacting with remote repo Add a git URL as remote: git remote add origin [url] Get all changes from remote branch: git pull Send all local changes to remote branch: git push Merge a remote branch to current: git merge origin\\[branch-name] ","date":"2022-01-12","objectID":"/git-cheat-sheet/:7:0","tags":["git"],"title":"Git Cheat Sheet","uri":"/git-cheat-sheet/"},{"categories":["cheatsheets"],"content":"Temporary commits Save all changes: git stash Restore changes from stash: git stash pop Discard the top of stash: git stash drop ","date":"2022-01-12","objectID":"/git-cheat-sheet/:8:0","tags":["git"],"title":"Git Cheat Sheet","uri":"/git-cheat-sheet/"},{"categories":["projects"],"content":"From May 1st, the government of India has opened several vaccination centers for people aged between 18 to 45. The vaccines are scarce and logging into Cowin app to check status is cumbersome due to frequent timeouts. The government has also made a public API to access vaccine related information like finding availability and downloading vaccination certificates. Using this, I have made a dashboard that makes it easy to find vaccine availability by district or pincode. Info It can only view vaccine availability. The actual booking needs to be done by the Cowin app ","date":"2021-05-15","objectID":"/covid-india-vaccine-appointment-availability/:0:0","tags":["javascript","web-development","python","angular"],"title":"Covid Vaccine Availability Dashboard","uri":"/covid-india-vaccine-appointment-availability/"},{"categories":["projects"],"content":"Dashboard Demo This dashboard is made with Angular web framework and Angular Material for components. View full page demo | View repo on github ","date":"2021-05-15","objectID":"/covid-india-vaccine-appointment-availability/:1:0","tags":["javascript","web-development","python","angular"],"title":"Covid Vaccine Availability Dashboard","uri":"/covid-india-vaccine-appointment-availability/"},{"categories":["projects"],"content":"Cowin APIs The APIs have the general pattern: BASE_URL + PATH + PARAMETERS where BASE_URL is cdn-api.co-vin.in/api/v2/appointment/sessions/public/ PATH QUERY PARAMETERS EXAMPLE findByDistrict district_id \u0026 date cdn-api.co-vin.in/api/v2/appointment/sessions/public/findByDistrict?district_id=365\u0026date=25-05-2021   findByPin pincode \u0026 date cdn-api.co-vin.in/api/v2/appointment/sessions/public/findByPin?pincode=440010\u0026date=25-05-2021   calendarByDistrict district_id \u0026 date cdn-api.co-vin.in/api/v2/appointment/sessions/public/calendarByDistrict?district_id=365\u0026date=25-05-2021   calendarByPin pincode \u0026 date cdn-api.co-vin.in/api/v2/appointment/sessions/public/calendarByPin?pincode=440010\u0026date=25-05-2021   For finding list of states and districts with their ids use BASE_URL as cdn-api.co-vin.in/api/v2/admin/location/ PATH PATH PARAMETERS EXAMPLE states None cdn-api.co-vin.in/api/v2/admin/location/states   districts state_id cdn-api.co-vin.in/api/v2/admin/location/districts/21   Tip If you get HTTP 403, then add a User-Agent header with value “Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/39.0.2171.95 Safari/537.36” These APIs can be accessed directly through a browser, REST clients like Postman, or any programming language. ","date":"2021-05-15","objectID":"/covid-india-vaccine-appointment-availability/:2:0","tags":["javascript","web-development","python","angular"],"title":"Covid Vaccine Availability Dashboard","uri":"/covid-india-vaccine-appointment-availability/"},{"categories":["projects"],"content":"Python Requests is one of the python libraries for making HTTP calls, with steps being as simple as: Import library: import requests Make the GET call response = requests.get(\"https://cdn-api.co-vin.in/api/v2/admin/location/states\") Check the status (200 = successful) print(response.status_code) Show the response print(response.json()) import requests import json # Appointment availibility by district and date (18+) url = \"https://cdn-api.co-vin.in/api/v2/appointment/sessions/public/findByDistrict\" params = {\"district_id\": \"365\", \"date\": \"25-05-2021\"} response = requests.get(url, params=params) print(\"HTTP \", response.status_code) data = response.json() for session in data[\"sessions\"]: if session[\"min_age_limit\"] == 18: print(json.dumps(session, indent=2)) # Appointment availibility by district for (18+) for next 7 days url = \"https://cdn-api.co-vin.in/api/v2/appointment/sessions/public/calendarByDistrict\" params = {\"district_id\": \"365\", \"date\": \"25-05-2021\"} response = requests.get(url, params=params) print(\"HTTP \", response.status_code) data = response.json() for center in data[\"centers\"]: for session in center[\"sessions\"]: if session[\"min_age_limit\"] == 18 and session[\"vaccine\"]==\"COVISHIELD\" and session[\"available_capacity\"] \u003e 0: print(json.dumps(session, indent=2)) ","date":"2021-05-15","objectID":"/covid-india-vaccine-appointment-availability/:2:1","tags":["javascript","web-development","python","angular"],"title":"Covid Vaccine Availability Dashboard","uri":"/covid-india-vaccine-appointment-availability/"},{"categories":["projects"],"content":"JavaScript XMLHttpRequest is a built-in object in JavaScript that can make HTTP calls in simple steps: Instantiate the object var request = new XMLHttpRequest() Prepare the GET call request.open('GET', 'https://cdn-api.co-vin.in/api/v2/appointment/sessions/public/findByDistrict?district_id=365\u0026date=25-05-2021') Define a function to do something when the response is received request.onload = function () { console.log(request.status); console.log(this.response); } Make the GET call request.send() // Appointment availibility by date and district var request = new XMLHttpRequest(); request.open('GET', 'https://cdn-api.co-vin.in/api/v2/appointment/sessions/public/findByDistrict?district_id=365\u0026date=25-05-2021'); request.onload = function () { console.log(request.status); console.log(this.response); } request.send() ","date":"2021-05-15","objectID":"/covid-india-vaccine-appointment-availability/:2:2","tags":["javascript","web-development","python","angular"],"title":"Covid Vaccine Availability Dashboard","uri":"/covid-india-vaccine-appointment-availability/"},{"categories":["projects"],"content":"References Cowin API documentation by GoI Making HTTP requests in Python Making HTTP requests in JS (or TS) Getting started with Angular Getting started with Angular Material ","date":"2021-05-15","objectID":"/covid-india-vaccine-appointment-availability/:3:0","tags":["javascript","web-development","python","angular"],"title":"Covid Vaccine Availability Dashboard","uri":"/covid-india-vaccine-appointment-availability/"},{"categories":[],"content":"Hi! I am Pratyaksha Jha. I am a software developer and a geek. I am passionate about learning and building. This is my blog. I write about challenging concepts, building usable software, code I often re-use. I also host some tiny utilities here. I would love to hear your feedback and suggestions. Feel free to reach out at hello@pratyakshajha.me! _  Pratyaksha means that which is before one’s eyes  Tools Java, Python, AWS  Myer-Briggs INTJ-A  Currently Reading The Hitchhiker’s Guide to the Galaxy  Obsessively Listening Aaron Smith - Dancin (KRONO Remix) Spotify Youtube ","date":"2020-07-26","objectID":"/about/:0:0","tags":[],"title":"About Me","uri":"/about/"}]