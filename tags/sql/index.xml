<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>SQL - Tag - Pratyaksha</title><link>https://pratyakshajha.me/tags/sql/</link><description>SQL - Tag - Pratyaksha</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><managingEditor>hello@pratyakshajha.me (Pratyaksha Jha)</managingEditor><webMaster>hello@pratyakshajha.me (Pratyaksha Jha)</webMaster><lastBuildDate>Mon, 05 Feb 2024 09:27:48 +0530</lastBuildDate><atom:link href="https://pratyakshajha.me/tags/sql/" rel="self" type="application/rss+xml"/><item><title>SQL Cheatsheet</title><link>https://pratyakshajha.me/sql-cheatsheet/</link><pubDate>Mon, 05 Feb 2024 09:27:48 +0530</pubDate><author>Pratyaksha Jha</author><guid>https://pratyakshajha.me/sql-cheatsheet/</guid><description><![CDATA[Single line comment: -- comment
Multiline comment: /* comments */
Data query Language (DQL) 1 2 3 4 5 6 7 SELECT &#39;ID: &#39;, id, col_1 + col_2, sqrt(col_2) FROM t1 -- precedence within WHERE: functions, comparisons, NOT, AND, OR WHERE col_1 &gt; 100 AND NOT MOD(col_2, 10) = 0 OR col_3 &lt; col_1 ORDER BY col_4 DESC, col_5; 1 2 -- number of rows, number of not-null-values SELECT COUNT(*), COUNT(col_1) FROM t1; 1 2 -- predefined functions SELECT COUNT(col_1), MAX(col_1), MIN(col_1), AVG(col_1), SUM(col_1) FROM t1; 1 2 -- UNIQUE values only SELECT DISTINCT col_1 FROM t1; 1 2 -- Only the combination of col_1 plus col_2 is unique SELECT DISTINCT col_1, col_2 FROM t1; Case Expression 1 2 3 4 5 6 7 8 SELECT id, CASE contact_type WHEN &#39;fixed line&#39; THEN &#39;Phone&#39; WHEN &#39;mobile&#39; THEN &#39;Phone&#39; ELSE &#39;Not a telephone number&#39; END AS &#39;contact_type&#39;, contact_value FROM contact; There are two short forms for special CASE expressions: COALESCE and NULLIF.]]></description></item></channel></rss>